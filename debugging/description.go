/**
 *	使用日志帮助调试
 * 	打印数据
 * 	使用fmt包
 * 	使用Delve
 * 	使用gdb 
 * 
 * 	程序不像预期那样的工作的迹象有很多，包括编译错误、运行阶段错误、文件权限问题以及数据不正确等。
 * 	使用Go语言开发复杂的程序时，调试将成为日常工作中不可或缺的一部分。
 * 
 * 	日志
 * 		日志指的是记录程序执行期间发生的情况。无论程序是否需要调试，都会产生日志，这对于理解程序的执行情况很有帮助。很多常见的应用程序都提供了日志功能，这些日志可用来监控应用
 * 	程序的健康状况、跟踪问题以及发现问题
 * 		日志并非为报告Bug而提供的，而是可供在Bug发生时使用的基础设施。
 * 		Go语言提供了log包，让应用程序能够将日志写入终端或文件。
 * 
 *      Go语言没有官方调试器，但很多社区项目都提供了Go语言调试器。Delve就是这样一个项目，它为Go项目提供了丰富的调试环境。
 *      安装Delve ： go get github.com/derekparker/delve/cmd/dlv  (安装失败)
 * 
 *      使用gdb
 *          如果您使用的是UNIX系统（macOS或Linux）,可使用GNU调试器来调试Go程序。GNU调试器应用广泛，因此通常可使用包管理器来安装。GNU调试器操作的是二进制文件，因此需要先
 *      编译Go程序以生产二进制文件。
 *          go build example10.go
 *          这将创建一个名为example10的二进制文件。要使用GNU调试器进行调试，首先需要像下面这样启动它
 *          gdb example10
 *          您将看到大量输出，最后进入显示程序已暂停执行的控制台。使用GNU调试器时，可使用命令list来查看代码的组成部分。
 */